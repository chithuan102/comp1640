@function rem($pixel) {
    @return $pixel/16 + rem;
  }

@mixin breakpoint($min: 0, $max: 0) {
  $type: type-of($min);

  @if $type == number {
    $query: "all" !default;
    @if $min != 0 and $max != 0 { 
      $query: "(min-width: #{$min}) and (max-width: #{$max})"; 
    }
    @else if $min != 0 and $max == 0 { 
      $query: "(min-width: #{$min})"; 
    }
    @else if $min == 0 and $max != 0 { 
      $query: "(max-width: #{$max})"; 
    }
    @media #{$query} { 
      @content;
    }
  }
}

@mixin border-radius($radius) {
	border-radius: $radius;
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
}

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
